         34650019 function calls (34643667 primitive calls) in 1947.011 seconds

   Ordered by: cumulative time
   List reduced from 1256 to 100 due to restriction <100>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.159    0.159 1947.011 1947.011 genetic_algorithm.py:229(start_genetic_algorithm)
      400    0.657    0.002 1669.937    4.175 genetic_algorithm.py:79(play_games)
      400    0.016    0.000 1669.242    4.173 parallel.py:958(__call__)
      400    0.583    0.001 1668.515    4.171 parallel.py:918(retrieve)
    79758    0.079    0.000 1667.781    0.021 _parallel_backends.py:537(wrap_future_result)
    79758    0.389    0.000 1667.702    0.021 _base.py:408(result)
    32654    0.310    0.000 1667.102    0.051 threading.py:264(wait)
    84511 1666.666    0.020 1666.666    0.020 {method 'acquire' of '_thread.lock' objects}
      401    0.407    0.001  172.803    0.431 genetic_algorithm.py:53(generate_population)
      400    0.006    0.000  171.873    0.430 genetic_algorithm.py:171(generate_children)
        1    0.025    0.025  102.929  102.929 play_game.py:47(play_game)
      511  101.608    0.199  101.608    0.199 {method 'tick' of 'Clock' objects}
      400    9.648    0.024   86.503    0.216 genetic_algorithm.py:184(<listcomp>)
      400    0.342    0.001   85.026    0.213 genetic_algorithm.py:183(<listcomp>)
   320000    1.737    0.000   84.684    0.000 genetic_algorithm.py:187(crossover)
   321000    1.250    0.000   78.197    0.000 snake.py:8(__init__)
   320000    1.595    0.000   76.855    0.000 genetic_algorithm.py:208(mutation)
   321001    0.473    0.000   68.898    0.000 snake_board.py:14(__init__)
   321001    0.699    0.000   67.637    0.000 snake_board.py:21(generate_apples)
   642002   25.782    0.000   59.003    0.000 {method 'seed' of 'numpy.random.mtrand.RandomState' objects}
   320000   24.855    0.000   53.293    0.000 genetic_algorithm.py:223(<listcomp>)
   321001   26.068    0.000   29.548    0.000 contextlib.py:71(inner)
 11838259   28.438    0.000   28.438    0.000 {method 'normal' of 'numpy.random.mtrand.RandomState' objects}
  1291533    0.393    0.000   22.345    0.000 _asarray.py:14(asarray)
  1292844   21.991    0.000   21.991    0.000 {built-in method numpy.array}
   321001    3.024    0.000    7.935    0.000 {method 'randint' of 'numpy.random.mtrand.RandomState' objects}
978709/978198    1.996    0.000    6.684    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
   321000    0.539    0.000    5.201    0.000 brain.py:20(__init__)
   321801    0.246    0.000    4.928    0.000 <__array_function__ internals>:2(prod)
   321000    2.314    0.000    4.662    0.000 brain.py:34(initialize_dna)
   321801    0.437    0.000    4.408    0.000 fromnumeric.py:2881(prod)
   641000    4.298    0.000    4.298    0.000 {method 'rand' of 'numpy.random.mtrand.RandomState' objects}
   333331    1.168    0.000    4.149    0.000 fromnumeric.py:70(_wrapreduction)
   642002    1.198    0.000    2.801    0.000 _ufunc_config.py:32(seterr)
   320400    2.680    0.000    2.697    0.000 {method 'choice' of 'numpy.random.mtrand.RandomState' objects}
   321001    0.611    0.000    2.512    0.000 random.py:681(getrandbits)
   334131    2.429    0.000    2.429    0.000 {method 'reduce' of 'numpy.ufunc' objects}
   642023    0.529    0.000    2.425    0.000 <__array_function__ internals>:2(concatenate)
   321001    0.333    0.000    2.007    0.000 _ufunc_config.py:433(__enter__)
  2248610    1.988    0.000    1.988    0.000 {method 'reshape' of 'numpy.ndarray' objects}
   322201    1.760    0.000    1.760    0.000 {built-in method posix.urandom}
   321001    0.299    0.000    1.427    0.000 _ufunc_config.py:438(__exit__)
   642002    0.998    0.000    1.075    0.000 _ufunc_config.py:132(geterr)
   325033    0.482    0.000    0.797    0.000 snake_board.py:32(get_new_apple)
        1    0.000    0.000    0.733    0.733 play_game.py:9(__init__)
     6800    0.033    0.000    0.537    0.000 parallel.py:796(dispatch_one_batch)
        1    0.385    0.385    0.479    0.479 {built-in method pygame.display.set_mode}
      511    0.009    0.000    0.396    0.001 snake.py:38(make_decision)
   642002    0.369    0.000    0.369    0.000 {built-in method numpy.seterrobj}
     6400    0.020    0.000    0.359    0.000 parallel.py:759(_dispatch)
      511    0.010    0.000    0.329    0.001 snake.py:102(get_vision)
     6400    0.016    0.000    0.328    0.000 _parallel_backends.py:529(apply_async)
      511    0.317    0.001    0.317    0.001 {built-in method pygame.display.update}
      400    0.303    0.001    0.303    0.001 genetic_algorithm.py:182(<listcomp>)
     6400    0.011    0.000    0.291    0.000 reusable_executor.py:175(submit)
     6400    0.024    0.000    0.280    0.000 process_executor.py:1099(submit)
   459186    0.279    0.000    0.279    0.000 {built-in method builtins.getattr}
        1    0.254    0.254    0.254    0.254 {built-in method pygame.base.init}
   333331    0.253    0.000    0.253    0.000 fromnumeric.py:71(<dictcomp>)
      511    0.018    0.000    0.247    0.000 snake.py:117(get_body_vision)
        1    0.000    0.000    0.241    0.241 genetic_algorithm.py:36(__init__)
        1    0.001    0.001    0.241    0.241 genetic_algorithm.py:61(<listcomp>)
  1284004    0.237    0.000    0.237    0.000 {built-in method numpy.geterrobj}
      813    0.149    0.000    0.235    0.000 {built-in method builtins.sorted}
      511    0.214    0.000    0.214    0.000 {built-in method pygame.event.get}
      511    0.052    0.000    0.200    0.000 snake.py:122(<listcomp>)
   322315    0.150    0.000    0.150    0.000 {built-in method from_bytes}
   642023    0.133    0.000    0.133    0.000 multiarray.py:143(concatenate)
      511    0.045    0.000    0.126    0.000 play_game.py:27(display_snake_body)
      400    0.002    0.000    0.125    0.000 parallel.py:730(_initialize_backend)
      400    0.002    0.000    0.123    0.000 _parallel_backends.py:486(configure)
      400    0.002    0.000    0.122    0.000 genetic_algorithm.py:149(survival_of_the_fittest)
   106559    0.071    0.000    0.114    0.000 threading.py:240(__enter__)
      400    0.001    0.000    0.112    0.000 genetic_algorithm.py:160(select_parents)
     5110    0.011    0.000    0.110    0.000 <__array_function__ internals>:2(all)
      400    0.003    0.000    0.108    0.000 genetic_algorithm.py:108(get_population_fitness)
     6400    0.013    0.000    0.098    0.000 process_executor.py:1091(_ensure_executor_running)
     6400    0.006    0.000    0.096    0.000 process_executor.py:135(wakeup)
     41/4    0.000    0.000    0.096    0.024 <frozen importlib._bootstrap>:978(_find_and_load)
     41/4    0.000    0.000    0.095    0.024 <frozen importlib._bootstrap>:948(_find_and_load_unlocked)
     41/4    0.000    0.000    0.095    0.024 <frozen importlib._bootstrap>:663(_load_unlocked)
     38/4    0.000    0.000    0.094    0.024 <frozen importlib._bootstrap_external>:722(exec_module)
     46/4    0.000    0.000    0.093    0.023 <frozen importlib._bootstrap>:211(_call_with_frames_removed)
     40/4    0.000    0.000    0.093    0.023 {built-in method builtins.exec}
        1    0.000    0.000    0.093    0.093 pkgdata.py:18(<module>)
   106559    0.067    0.000    0.093    0.000 threading.py:243(__exit__)
    10603    0.092    0.000    0.092    0.000 {built-in method pygame.draw.rect}
        1    0.000    0.000    0.091    0.091 __init__.py:15(<module>)
     6400    0.014    0.000    0.090    0.000 connection.py:181(send_bytes)
     5110    0.011    0.000    0.089    0.000 fromnumeric.py:2337(all)
      400    0.002    0.000    0.087    0.000 executor.py:19(get_memmapping_executor)
      511    0.087    0.000    0.087    0.000 {method 'fill' of 'pygame.Surface' objects}
      400    0.005    0.000    0.085    0.000 executor.py:25(get_memmapping_executor)
     5620    0.010    0.000    0.084    0.000 <__array_function__ internals>:2(any)
   333523    0.082    0.000    0.082    0.000 {method 'items' of 'dict' objects}
      400    0.076    0.000    0.076    0.000 {built-in method _pickle.dump}
     6400    0.008    0.000    0.072    0.000 connection.py:390(_send_bytes)
   321801    0.070    0.000    0.070    0.000 fromnumeric.py:2876(_prod_dispatcher)
      400    0.070    0.000    0.070    0.000 genetic_algorithm.py:114(<listcomp>)
      800    0.002    0.000    0.069    0.000 <__array_function__ internals>:2(mean)


